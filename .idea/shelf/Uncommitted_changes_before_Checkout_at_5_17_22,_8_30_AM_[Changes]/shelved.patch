Index: src/com/hotel/menu/Menu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.hotel.menu;\n\nimport com.hotel.model.Reservation;\nimport com.hotel.resource.HotelResource;\nimport com.hotel.resource.ReservationService;\n\nimport java.text.ParseException;\nimport java.util.Collection;\nimport java.util.Scanner;\nimport java.util.regex.Pattern;\nimport java.text.SimpleDateFormat;\n\npublic class Menu {\n    // static field for default MM/dd/yyyy format\n    private static final SimpleDateFormat DEFAULT_DATE_FORMAT = new SimpleDateFormat(\"MM/dd/yyyy\");\n    private static final HotelResource hotelResource = HotelResource.getInstance();\n\n\n    public static void execute() {\n        String line = \"\";\n        Scanner scanner = new Scanner(System.in);\n        showMenu();\n\n        try {\n            line = scanner.nextLine();\n            // while the input is between 1 and 5\n            while (line.matches(\"[1-5]\")) {\n                switch (line) {\n                    case \"1\":\n                        findAndReserveRoom();\n                        break;\n                    case \"2\":\n                        viewMyReservation();\n                        break;\n                    case \"3\":\n                        createAccount();\n                        break;\n                    case \"4\":\n                        FrontDesk.frontDesk();\n                        break;\n                    case \"5\":\n                        System.out.println(\"Thank you for visiting Bellagio Las Vegas!\");\n                        System.exit(0);\n                        break;\n                    default:\n                        System.out.println(\"Invalid option\");\n                        break;\n                }\n            }\n        } catch (Exception StringIndexOutOfBoundsException) {\n            System.out.println(\"Please select a valid option.\");\n        }\n    }\n\n    private static void findAndReserveRoom() throws ParseException {\n        Scanner scanner = new Scanner(System.in);\n\n        System.out.println(\"Enter check in date (mm/dd/yyyy): \");\n        String checkInDate = getDate(scanner);\n\n        System.out.println(\"Enter check out date (mm/dd/yyyy): \");\n        String checkOutDate = getDate(scanner);\n\n        // With the check in and out dates, iterate through the room collection at ReservationService\n        Collection<IRoom> availableRooms = HotelResource.findARoom(checkInDate, checkOutDate);\n\n        // If there is at least one available room, display the available rooms\n        if (availableRooms.size() > 0) {\n            System.out.println(\"Available rooms:\");\n            for (IRoom room : availableRooms) {\n                System.out.println(room.toString());\n                reserve(checkInDate, checkOutDate);\n            }\n        } else {\n            System.out.println(\"No available rooms.\");\n            Collection<IRoom> rooms = HotelResource.customerService.findAlternativeRooms(checkInDate, checkOutDate);\n            // If there is\n        }\n    }\n\n    private static void reserve(String checkInDate, String checkOutDate) {\n        // Ask if the customer wants to reserve the room\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Would you like to reserve a room? (y/n)\");\n        String answer = scanner.nextLine();\n\n        if (answer.equalsIgnoreCase(\"y\")) {\n            // Ask if the customer has a registered email with us\n            System.out.println(\"Do you have your email registered with us ? (y/n)\");\n            answer = scanner.nextLine();\n            // If yes, ask for the email\n            if (answer.equalsIgnoreCase(\"y\")) {\n                System.out.println(\"Enter your email: \");\n                String email = scanner.nextLine();\n                // if the email is not registered, print an error message and return to the menu\n                if (!ReservationService.getCustomer(email)) {\n                    System.out.println(\"Email is not registered. Please create an account at menu.\");\n                    showMenu();\n                } else {\n                    System.out.println(\"Enter the room number you would like to reserve: \");\n                    String roomNumber = scanner.nextLine();\n                    // If the room number match the room number in the collection, reserve the room\n                    IRoom room = hotelResource.getRoom(roomNumber);\n                    Reservation reservation  hotelResource.bookARoom(room, checkInDate, checkOutDate);\n                    System.out.println(\"Room reserved. We are looking forward to your stay!\");\n                    System.out.println(reservation.toString());\n                }\n            } else {\n                System.out.println(\"Please register your email with us prior to room reservation.\");\n                showMenu();\n            }\n        } else {\n            System.out.println(\"Thank you for visiting Bellagio Las Vegas!\");\n            showMenu();\n        }\n    }\n\n    private static void viewMyReservation() {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Enter your email: \");\n        String email = scanner.nextLine();\n\n        hotelResource.getCustomersReservations(email);\n    }\n\n    private static void createAccount() {\n        Scanner scanner = new Scanner(System.in);\n            // Ask customer to enter email, first name, last name.\n        System.out.println(\"Enter your email: \");\n        String email = scanner.nextLine();\n        System.out.println(\"Enter your first name: \");\n        String firstName = scanner.nextLine();\n        System.out.println(\"Enter your last name: \");\n        String lastName = scanner.nextLine();\n\n        // Create a new customer object with the email, first name, last name.\n        try {\n            HotelResource.createCustomer(email, firstName, lastName);\n            System.out.println(\"Thank you for joining us!\");\n            showMenu();\n        } catch (IllegalArgumentException e) {\n            System.out.println(\"Email already exists.\");\n            createAccount();\n        }\n\n    }\n\n    private static String getDate(Scanner scanner) throws ParseException {\n        // Check if the date is in the DEFAULT_DATE_FORMAT format and not empty. If not, throw an exception with message.\n        String date = scanner.nextLine();\n        if (Pattern.matches(\"^\\\\d{2}/\\\\d{2}/\\\\d{4}$\", date) && !date.isEmpty()) {\n            // Check if the checkInDate is before the checkOutDate. If not, throw an exception with message.\n            if (DEFAULT_DATE_FORMAT.parse(date).before(DEFAULT_DATE_FORMAT.parse(scanner.nextLine()))) {\n                return DEFAULT_DATE_FORMAT.parse(date).toString();\n            } else {\n                throw new ParseException(\"Check in date must be before check out date.\", 0);\n            }\n        } else {\n            // throw an exception with message, and re-prompt for the date with findAndReserveRoom()\n            throw new ParseException(\"Invalid date format.\", 0);\n        }\n    }\n\n    public static void showMenu() {\n        // Display the menu\n        System.out.println(\"Welcome to Bellagio Las Vegas! \\n\" +\n                \"------------------------------------------\\n\" +\n                \"1. Find and reserve a room\\n\" +\n                \"2. View my reservation\\n\" +\n                \"3. Create an account\\n\" +\n                \"4. Front Desk (admin only)\\n\" +\n                \"5. Exit\");\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/hotel/menu/Menu.java b/src/com/hotel/menu/Menu.java
--- a/src/com/hotel/menu/Menu.java	(revision 144ed6ad2ccd15f7f99898f295aac3f9b46a9712)
+++ b/src/com/hotel/menu/Menu.java	(date 1652801390718)
@@ -2,7 +2,7 @@
 
 import com.hotel.model.Reservation;
 import com.hotel.resource.HotelResource;
-import com.hotel.resource.ReservationService;
+import com.hotel.service.ReservationService;
 
 import java.text.ParseException;
 import java.util.Collection;
