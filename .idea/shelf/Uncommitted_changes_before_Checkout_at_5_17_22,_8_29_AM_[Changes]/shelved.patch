Index: src/com/hotel/menu/Menu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.hotel.menu;\n\nimport com.hotel.model.Reservation;\nimport com.hotel.resource.HotelResource;\nimport com.hotel.service.ReservationService;\n\nimport java.text.ParseException;\nimport java.util.Collection;\nimport java.util.Scanner;\nimport java.util.regex.Pattern;\nimport java.text.SimpleDateFormat;\n\npublic class Menu {\n    // static field for default MM/dd/yyyy format\n    private static final SimpleDateFormat DEFAULT_DATE_FORMAT = new SimpleDateFormat(\"MM/dd/yyyy\");\n    private static final HotelResource hotelResource = HotelResource.getInstance();\n\n\n    public static void execute() {\n        String line = \"\";\n        Scanner scanner = new Scanner(System.in);\n        showMenu();\n\n        try {\n            line = scanner.nextLine();\n            // while the input is between 1 and 5\n            while (line.matches(\"[1-5]\")) {\n                switch (line) {\n                    case \"1\":\n                        findAndReserveRoom();\n                        break;\n                    case \"2\":\n                        viewMyReservation();\n                        break;\n                    case \"3\":\n                        createAccount();\n                        break;\n                    case \"4\":\n                        FrontDesk.frontDesk();\n                        break;\n                    case \"5\":\n                        System.out.println(\"Thank you for visiting Bellagio Las Vegas!\");\n                        System.exit(0);\n                        break;\n                    default:\n                        System.out.println(\"Invalid option\");\n                        break;\n                }\n            }\n        } catch (Exception StringIndexOutOfBoundsException) {\n            System.out.println(\"Please select a valid option.\");\n        }\n    }\n\n    private static void findAndReserveRoom() throws ParseException {\n        Scanner scanner = new Scanner(System.in);\n\n        System.out.println(\"Enter check in date (mm/dd/yyyy): \");\n        String checkInDate = getDate(scanner);\n\n        System.out.println(\"Enter check out date (mm/dd/yyyy): \");\n        String checkOutDate = getDate(scanner);\n\n        // With the check in and out dates, iterate through the room collection at ReservationService\n        Collection<IRoom> availableRooms = HotelResource.findARoom(checkInDate, checkOutDate);\n\n        // If there is at least one available room, display the available rooms\n        if (availableRooms.size() > 0) {\n            System.out.println(\"Available rooms:\");\n            for (IRoom room : availableRooms) {\n                System.out.println(room.toString());\n                reserve(checkInDate, checkOutDate);\n            }\n        } else {\n            System.out.println(\"No available rooms.\");\n            Collection<IRoom> rooms = HotelResource.customerService.findAlternativeRooms(checkInDate, checkOutDate);\n            // If there is\n        }\n    }\n\n    private static void reserve(String checkInDate, String checkOutDate) {\n        // Ask if the customer wants to reserve the room\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Would you like to reserve a room? (y/n)\");\n        String answer = scanner.nextLine();\n\n        if (answer.equalsIgnoreCase(\"y\")) {\n            // Ask if the customer has a registered email with us\n            System.out.println(\"Do you have your email registered with us ? (y/n)\");\n            answer = scanner.nextLine();\n            // If yes, ask for the email\n            if (answer.equalsIgnoreCase(\"y\")) {\n                System.out.println(\"Enter your email: \");\n                String email = scanner.nextLine();\n                // if the email is not registered, print an error message and return to the menu\n                if (!ReservationService.getCustomer(email)) {\n                    System.out.println(\"Email is not registered. Please create an account at menu.\");\n                    showMenu();\n                } else {\n                    System.out.println(\"Enter the room number you would like to reserve: \");\n                    String roomNumber = scanner.nextLine();\n                    // If the room number match the room number in the collection, reserve the room\n                    IRoom room = hotelResource.getRoom(roomNumber);\n                    Reservation reservation  hotelResource.bookARoom(room, checkInDate, checkOutDate);\n                    System.out.println(\"Room reserved. We are looking forward to your stay!\");\n                    System.out.println(reservation.toString());\n                }\n            } else {\n                System.out.println(\"Please register your email with us prior to room reservation.\");\n                showMenu();\n            }\n        } else {\n            System.out.println(\"Thank you for visiting Bellagio Las Vegas!\");\n            showMenu();\n        }\n    }\n\n    private static void viewMyReservation() {\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Enter your email: \");\n        String email = scanner.nextLine();\n\n        hotelResource.getCustomersReservations(email);\n    }\n\n    private static void createAccount() {\n        Scanner scanner = new Scanner(System.in);\n            // Ask customer to enter email, first name, last name.\n        System.out.println(\"Enter your email: \");\n        String email = scanner.nextLine();\n        System.out.println(\"Enter your first name: \");\n        String firstName = scanner.nextLine();\n        System.out.println(\"Enter your last name: \");\n        String lastName = scanner.nextLine();\n\n        // Create a new customer object with the email, first name, last name.\n        try {\n            HotelResource.createCustomer(email, firstName, lastName);\n            System.out.println(\"Thank you for joining us!\");\n            showMenu();\n        } catch (IllegalArgumentException e) {\n            System.out.println(\"Email already exists.\");\n            createAccount();\n        }\n\n    }\n\n    private static String getDate(Scanner scanner) throws ParseException {\n        // Check if the date is in the DEFAULT_DATE_FORMAT format and not empty. If not, throw an exception with message.\n        String date = scanner.nextLine();\n        if (Pattern.matches(\"^\\\\d{2}/\\\\d{2}/\\\\d{4}$\", date) && !date.isEmpty()) {\n            // Check if the checkInDate is before the checkOutDate. If not, throw an exception with message.\n            if (DEFAULT_DATE_FORMAT.parse(date).before(DEFAULT_DATE_FORMAT.parse(scanner.nextLine()))) {\n                return DEFAULT_DATE_FORMAT.parse(date).toString();\n            } else {\n                throw new ParseException(\"Check in date must be before check out date.\", 0);\n            }\n        } else {\n            // throw an exception with message, and re-prompt for the date with findAndReserveRoom()\n            throw new ParseException(\"Invalid date format.\", 0);\n        }\n    }\n\n    public static void showMenu() {\n        // Display the menu\n        System.out.println(\"Welcome to Bellagio Las Vegas! \\n\" +\n                \"------------------------------------------\\n\" +\n                \"1. Find and reserve a room\\n\" +\n                \"2. View my reservation\\n\" +\n                \"3. Create an account\\n\" +\n                \"4. Front Desk (admin only)\\n\" +\n                \"5. Exit\");\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/hotel/menu/Menu.java b/src/com/hotel/menu/Menu.java
--- a/src/com/hotel/menu/Menu.java	(revision 91b6fe6e99747dbebb04a4bba105c6b13602a30a)
+++ b/src/com/hotel/menu/Menu.java	(date 1652801251232)
@@ -1,8 +1,8 @@
 package com.hotel.menu;
 
 import com.hotel.model.Reservation;
-import com.hotel.resource.HotelResource;
-import com.hotel.service.ReservationService;
+import com.hotel.resources.HotelResource;
+import com.hotel.services.ReservationService;
 
 import java.text.ParseException;
 import java.util.Collection;
Index: .idea/uiDesigner.xml
===================================================================
diff --git a/.idea/uiDesigner.xml b/.idea/uiDesigner.xml
deleted file mode 100644
--- a/.idea/uiDesigner.xml	(revision 91b6fe6e99747dbebb04a4bba105c6b13602a30a)
+++ /dev/null	(revision 91b6fe6e99747dbebb04a4bba105c6b13602a30a)
@@ -1,124 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="Palette2">
-    <group name="Swing">
-      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
-      </item>
-      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
-      </item>
-      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
-      </item>
-      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.png" removable="false" auto-create-binding="false" can-attach-label="true">
-        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
-      </item>
-      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
-        <initial-values>
-          <property name="text" value="Button" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
-        <initial-values>
-          <property name="text" value="RadioButton" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
-        <initial-values>
-          <property name="text" value="CheckBox" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
-        <initial-values>
-          <property name="text" value="Label" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
-          <preferred-size width="150" height="-1" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
-          <preferred-size width="150" height="-1" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
-          <preferred-size width="150" height="-1" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
-      </item>
-      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
-          <preferred-size width="200" height="200" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
-          <preferred-size width="200" height="200" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
-      </item>
-      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
-      </item>
-      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
-      </item>
-      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
-      </item>
-      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
-          <preferred-size width="-1" height="20" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
-      </item>
-      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
-      </item>
-    </group>
-  </component>
-</project>
\ No newline at end of file
